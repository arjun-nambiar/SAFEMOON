/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OptimizedTransparentUpgradeableProxy,
  OptimizedTransparentUpgradeableProxyInterface,
} from "../../../libraries/proxy/OptimizedTransparentUpgradeableProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialAdmin",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "_OptimizedTransparentUpgradeableProxy_init_",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFactory",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFactory",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109d6806100206000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b14610098578063d6969857146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b610080366004610748565b610118565b61005b61009336600461076c565b610155565b3480156100a457600080fd5b506100ad610211565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e4366004610807565b61025a565b3480156100f557600080fd5b506100ad610382565b6101066103c7565b610116610111610469565b610501565b565b600080516020610981833981519152546001600160a01b0316336001600160a01b0316141561014d5761014a81610525565b50565b61014a6100fe565b600080516020610981833981519152546001600160a01b0316336001600160a01b031614156102045761018783610525565b6000610191610469565b90506000816001600160a01b031684846040516101af9291906108dd565b600060405180830381855af49150503d80600081146101ea576040519150601f19603f3d011682016040523d82523d6000602084013e6101ef565b606091505b50509050806101fd57600080fd5b5050505050565b61020c6100fe565b505050565b60006102296000805160206109818339815191525490565b6001600160a01b0316336001600160a01b0316141561024f5761024a610469565b905090565b6102576100fe565b90565b600054610100900460ff168061026f5750303b155b8061027d575060005460ff16155b6102e55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015610307576000805461ffff19166101011790555b6103118483610565565b61033c60017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046108ed565b6000805160206109818339815191521461035857610358610912565b600080516020610981833981519152839055801561037c576000805461ff00191690555b50505050565b600061039a6000805160206109818339815191525490565b6001600160a01b0316336001600160a01b0316141561024f57506000805160206109818339815191525490565b600080516020610981833981519152546001600160a01b0316336001600160a01b031614156101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4016102dc565b60008060007fb2101b231486a8a17a16c101f8dde1145d21799358462f57035a227f25614da360001b905080549150816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610928565b9250505090565b3660008037600080366000845af43d6000803e808015610520573d6000f35b3d6000fd5b61052e816106a0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b61059060017fb2101b231486a8a17a16c101f8dde1145d21799358462f57035a227f25614da46108ed565b7fb2101b231486a8a17a16c101f8dde1145d21799358462f57035a227f25614da3146105be576105be610912565b6105c7826106a0565b80511561069c576000826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561060e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106329190610928565b90506000816001600160a01b03168360405161064e9190610945565b600060405180830381855af49150503d8060008114610689576040519150601f19603f3d011682016040523d82523d6000602084013e61068e565b606091505b505090508061037c57600080fd5b5050565b6001600160a01b0381163b61070f5760405162461bcd60e51b815260206004820152602f60248201527f5570677261646561626c6550726f78793a206e657720666163746f727920697360448201526e081b9bdd08184818dbdb9d1c9858dd608a1b60648201526084016102dc565b7fb2101b231486a8a17a16c101f8dde1145d21799358462f57035a227f25614da355565b6001600160a01b038116811461014a57600080fd5b60006020828403121561075a57600080fd5b813561076581610733565b9392505050565b60008060006040848603121561078157600080fd5b833561078c81610733565b9250602084013567ffffffffffffffff808211156107a957600080fd5b818601915086601f8301126107bd57600080fd5b8135818111156107cc57600080fd5b8760208285010111156107de57600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561081c57600080fd5b833561082781610733565b9250602084013561083781610733565b9150604084013567ffffffffffffffff8082111561085457600080fd5b818601915086601f83011261086857600080fd5b81358181111561087a5761087a6107f1565b604051601f8201601f19908116603f011681019083821181831017156108a2576108a26107f1565b816040528281528960208487010111156108bb57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b8183823760009101908152919050565b60008282101561090d57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561093a57600080fd5b815161076581610733565b6000825160005b81811015610966576020818601810151858301520161094c565b81811115610975576000828501525b50919091019291505056feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a26469706673582212209e2de154b93b5d07a3bc5beb531e783b4a519c225a3722509d99e051466523f764736f6c634300080b0033";

type OptimizedTransparentUpgradeableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimizedTransparentUpgradeableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimizedTransparentUpgradeableProxy__factory extends ContractFactory {
  constructor(...args: OptimizedTransparentUpgradeableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimizedTransparentUpgradeableProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<OptimizedTransparentUpgradeableProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OptimizedTransparentUpgradeableProxy {
    return super.attach(address) as OptimizedTransparentUpgradeableProxy;
  }
  override connect(
    signer: Signer
  ): OptimizedTransparentUpgradeableProxy__factory {
    return super.connect(
      signer
    ) as OptimizedTransparentUpgradeableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimizedTransparentUpgradeableProxyInterface {
    return new utils.Interface(
      _abi
    ) as OptimizedTransparentUpgradeableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimizedTransparentUpgradeableProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimizedTransparentUpgradeableProxy;
  }
}
