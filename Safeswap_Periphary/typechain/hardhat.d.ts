/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "ExampleFlashSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExampleFlashSwap__factory>;
    getContractFactory(
      name: "ExampleOracleSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExampleOracleSimple__factory>;
    getContractFactory(
      name: "ExampleSlidingWindowOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExampleSlidingWindowOracle__factory>;
    getContractFactory(
      name: "ExampleSwapToPrice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExampleSwapToPrice__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ISafeswapCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapCallee__factory>;
    getContractFactory(
      name: "ISafeswapERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapERC20__factory>;
    getContractFactory(
      name: "ISafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapFactory__factory>;
    getContractFactory(
      name: "ISafeswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapPair__factory>;
    getContractFactory(
      name: "OptimizedTransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimizedTransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableProxy__factory>;
    getContractFactory(
      name: "SafeswapERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeswapERC20__factory>;
    getContractFactory(
      name: "SafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeswapFactory__factory>;
    getContractFactory(
      name: "ISafeswapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter__factory>;
    getContractFactory(
      name: "SafeswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeswapPair__factory>;
    getContractFactory(
      name: "FeeJar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeJar__factory>;
    getContractFactory(
      name: "ISafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapFactory__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Extended",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Extended__factory>;
    getContractFactory(
      name: "IFeeJar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeJar__factory>;
    getContractFactory(
      name: "ISafeswapCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapCallee__factory>;
    getContractFactory(
      name: "ISafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapFactory__factory>;
    getContractFactory(
      name: "ISafeswapMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapMigrator__factory>;
    getContractFactory(
      name: "ISafeswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapPair__factory>;
    getContractFactory(
      name: "ISafeSwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeSwapRouter__factory>;
    getContractFactory(
      name: "ISafeswapRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter01__factory>;
    getContractFactory(
      name: "ISafeswapRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IUniswapV1Exchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV1Exchange__factory>;
    getContractFactory(
      name: "IUniswapV1Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV1Factory__factory>;
    getContractFactory(
      name: "FixedPoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPoint__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ISafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapFactory__factory>;
    getContractFactory(
      name: "ISafeswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapPair__factory>;
    getContractFactory(
      name: "ISafeswapRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter01__factory>;
    getContractFactory(
      name: "ISafeswapRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "SafeswapLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeswapLibrary__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "OptimizedTransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimizedTransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "OptimizedTransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimizedTransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdmin__factory>;
    getContractFactory(
      name: "TransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "IDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamond__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ISafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapFactory__factory>;
    getContractFactory(
      name: "ISafeswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapPair__factory>;
    getContractFactory(
      name: "ISafeswapRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter01__factory>;
    getContractFactory(
      name: "ISafeswapRouter01Old",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter01Old__factory>;
    getContractFactory(
      name: "ISafeswapRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter02__factory>;
    getContractFactory(
      name: "ISafeswapRouter02Old",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter02Old__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "RouterStorageLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RouterStorageLib__factory>;
    getContractFactory(
      name: "DiamondInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondInit__factory>;
    getContractFactory(
      name: "DiamondMultiInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondMultiInit__factory>;
    getContractFactory(
      name: "SafeswapMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeswapMigrator__factory>;
    getContractFactory(
      name: "SafeswapRouterProxy1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeswapRouterProxy1__factory>;
    getContractFactory(
      name: "SafeswapRouterProxy2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeswapRouterProxy2__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ISafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapFactory__factory>;
    getContractFactory(
      name: "ISafeswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapPair__factory>;
    getContractFactory(
      name: "SafeSwapTradeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeSwapTradeRouter__factory>;
    getContractFactory(
      name: "Safemoon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Safemoon__factory>;
    getContractFactory(
      name: "ISafemoon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafemoon__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "DeflatingERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeflatingERC20__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "RouterEventEmitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RouterEventEmitter__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ISafeswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapFactory__factory>;
    getContractFactory(
      name: "ISafeswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapPair__factory>;
    getContractFactory(
      name: "ISafeswapRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter01__factory>;
    getContractFactory(
      name: "ISafeswapRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISafeswapRouter02__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;

    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "ExampleFlashSwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExampleFlashSwap>;
    getContractAt(
      name: "ExampleOracleSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExampleOracleSimple>;
    getContractAt(
      name: "ExampleSlidingWindowOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExampleSlidingWindowOracle>;
    getContractAt(
      name: "ExampleSwapToPrice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExampleSwapToPrice>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ISafeswapCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapCallee>;
    getContractAt(
      name: "ISafeswapERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapERC20>;
    getContractAt(
      name: "ISafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapFactory>;
    getContractAt(
      name: "ISafeswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapPair>;
    getContractAt(
      name: "OptimizedTransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptimizedTransparentUpgradeableProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableProxy>;
    getContractAt(
      name: "SafeswapERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeswapERC20>;
    getContractAt(
      name: "SafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeswapFactory>;
    getContractAt(
      name: "ISafeswapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter>;
    getContractAt(
      name: "SafeswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeswapPair>;
    getContractAt(
      name: "FeeJar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeJar>;
    getContractAt(
      name: "ISafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapFactory>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Extended",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Extended>;
    getContractAt(
      name: "IFeeJar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeJar>;
    getContractAt(
      name: "ISafeswapCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapCallee>;
    getContractAt(
      name: "ISafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapFactory>;
    getContractAt(
      name: "ISafeswapMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapMigrator>;
    getContractAt(
      name: "ISafeswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapPair>;
    getContractAt(
      name: "ISafeSwapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeSwapRouter>;
    getContractAt(
      name: "ISafeswapRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter01>;
    getContractAt(
      name: "ISafeswapRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter02>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IUniswapV1Exchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV1Exchange>;
    getContractAt(
      name: "IUniswapV1Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV1Factory>;
    getContractAt(
      name: "FixedPoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedPoint>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ISafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapFactory>;
    getContractAt(
      name: "ISafeswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapPair>;
    getContractAt(
      name: "ISafeswapRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter01>;
    getContractAt(
      name: "ISafeswapRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter02>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "SafeswapLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeswapLibrary>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "OptimizedTransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptimizedTransparentUpgradeableProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "OptimizedTransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptimizedTransparentUpgradeableProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdmin>;
    getContractAt(
      name: "TransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransparentUpgradeableProxy>;
    getContractAt(
      name: "Diamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "IDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamond>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ISafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapFactory>;
    getContractAt(
      name: "ISafeswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapPair>;
    getContractAt(
      name: "ISafeswapRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter01>;
    getContractAt(
      name: "ISafeswapRouter01Old",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter01Old>;
    getContractAt(
      name: "ISafeswapRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter02>;
    getContractAt(
      name: "ISafeswapRouter02Old",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter02Old>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "RouterStorageLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RouterStorageLib>;
    getContractAt(
      name: "DiamondInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondInit>;
    getContractAt(
      name: "DiamondMultiInit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondMultiInit>;
    getContractAt(
      name: "SafeswapMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeswapMigrator>;
    getContractAt(
      name: "SafeswapRouterProxy1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeswapRouterProxy1>;
    getContractAt(
      name: "SafeswapRouterProxy2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeswapRouterProxy2>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ISafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapFactory>;
    getContractAt(
      name: "ISafeswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapPair>;
    getContractAt(
      name: "SafeSwapTradeRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeSwapTradeRouter>;
    getContractAt(
      name: "Safemoon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Safemoon>;
    getContractAt(
      name: "ISafemoon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafemoon>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "DeflatingERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DeflatingERC20>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "RouterEventEmitter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RouterEventEmitter>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ISafeswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapFactory>;
    getContractAt(
      name: "ISafeswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapPair>;
    getContractAt(
      name: "ISafeswapRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter01>;
    getContractAt(
      name: "ISafeswapRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISafeswapRouter02>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
