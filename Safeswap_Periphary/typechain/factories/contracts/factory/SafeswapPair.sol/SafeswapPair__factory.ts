/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SafeswapPair,
  SafeswapPairInterface,
} from "../../../../contracts/factory/SafeswapPair.sol/SafeswapPair";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600d5534801561001557600080fd5b506126c5806100256000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063022c0d9f1461014e57806306fdde03146101635780630902f1ac146101a4578063095ea7b3146101d85780630dfe1681146101fb57806318160ddd1461021b57806323b872dd1461023257806330adf81f14610245578063313ce5671461025a5780633644e51514610274578063485cc9551461027d5780635909c0d5146102905780635a3d5493146102995780636a627842146102a257806370a08231146102b55780637464fc3d146102d55780637ecebe00146102de57806389afcb44146102fe57806395d89b4114610326578063a9059cbb1461034b578063ba9a7a561461035e578063bc25cf7714610367578063c45a01551461037a578063d21220a714610393578063d505accf146103a6578063dd62ed3e146103b9578063fff6cae9146103e4575b600080fd5b61016161015c36600461215a565b6103ec565b005b61018e6040518060400160405280600c81526020016b5361666573776170204c507360a01b81525081565b60405161019b919061221f565b60405180910390f35b6101ac610a8e565b604080516001600160701b03948516815293909216602084015263ffffffff169082015260600161019b565b6101eb6101e6366004612252565b610ab8565b604051901515815260200161019b565b60075461020e906001600160a01b031681565b60405161019b919061227e565b61022460015481565b60405190815260200161019b565b6101eb610240366004612292565b610ace565b61022460008051602061267083398151915281565b610262601281565b60405160ff909116815260200161019b565b61022460045481565b61016161028b3660046122d3565b610b63565b610224600a5481565b610224600b5481565b6102246102b036600461230c565b610d4a565b6102246102c336600461230c565b60026020526000908152604090205481565b610224600c5481565b6102246102ec36600461230c565b60056020526000908152604090205481565b61031161030c36600461230c565b61109f565b6040805192835260208301919091520161019b565b61018e6040518060400160405280600681526020016505346532d4c560d41b81525081565b6101eb610359366004612252565b611496565b6102246103e881565b61016161037536600461230c565b6114a3565b60065461020e906201000090046001600160a01b031681565b60085461020e906001600160a01b031681565b6101616103b4366004612329565b6115ba565b6102246103c73660046122d3565b600360209081526000928352604080842090915290825290205481565b6101616117b9565b600d546001146104175760405162461bcd60e51b815260040161040e906123a0565b60405180910390fd5b6000600d81905550600660029054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa158015610472573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049691906123ca565b6001600160a01b0316336001600160a01b0316146104ee5760405162461bcd60e51b815260206004820152601560248201527429b0b332b9bbb0b81d1027a7262cafa927aaaa22a960591b604482015260640161040e565b600654604051633e0d6b6760e21b8152620100009091046001600160a01b03169063f835ad9c9061052390869060040161227e565b602060405180830381865afa158015610540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056491906123e7565b156105815760405162461bcd60e51b815260040161040e90612409565b60008511806105905750600084115b6105e85760405162461bcd60e51b8152602060048201526024808201527f53616665737761703a20494e53554646494349454e545f4f55545055545f414d60448201526313d5539560e21b606482015260840161040e565b6000806105f3610a8e565b5091509150816001600160701b0316871080156106185750806001600160701b031686105b6106525760405162461bcd60e51b81526020600482018190526024820152600080516020612630833981519152604482015260640161040e565b60075460085460009182916001600160a01b039182169190811690891682148015906106905750806001600160a01b0316896001600160a01b031614155b6106d35760405162461bcd60e51b815260206004820152601460248201527353616665737761703a20494e56414c49445f544f60601b604482015260640161040e565b8a156106e4576106e4828a8d6118e7565b89156106f5576106f5818a8c6118e7565b861561076257604051630f3271ad60e21b81526001600160a01b038a1690633cc9c6b49061072f9033908f908f908e908e90600401612439565b600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b505050505b8a1561077e5760075461077e906001600160a01b03168c611a53565b891561079a5760085461079a906001600160a01b03168b611a53565b6040516370a0823160e01b81526001600160a01b038316906370a08231906107c690309060040161227e565b602060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190612485565b6040516370a0823160e01b81529094506001600160a01b038216906370a082319061083690309060040161227e565b602060405180830381865afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190612485565b92505050600089856001600160701b031661089291906124b4565b831161089f5760006108bc565b6108b28a6001600160701b0387166124b4565b6108bc90846124b4565b905060006108d38a6001600160701b0387166124b4565b83116108e05760006108fd565b6108f38a6001600160701b0387166124b4565b6108fd90846124b4565b9050600082118061090e5750600081115b6109665760405162461bcd60e51b815260206004820152602360248201527f53616665737761703a20494e53554646494349454e545f494e5055545f414d4f60448201526215539560ea1b606482015260840161040e565b60006109738360026124cb565b61097f866103e86124cb565b61098991906124b4565b905060006109988360026124cb565b6109a4866103e86124cb565b6109ae91906124b4565b90506109c66001600160701b03808916908a166124cb565b6109d390620f42406124cb565b6109dd82846124cb565b1015610a195760405162461bcd60e51b815260206004820152600b60248201526a53616665737761703a204b60a81b604482015260640161040e565b5050610a2784848888611b6b565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600d55505050505050505050565b6009546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610ac5338484611d55565b50600192915050565b6001600160a01b038316600090815260036020908152604080832033845290915281205460001914610b4e576001600160a01b0384166000908152600360209081526040808320338452909152902054610b299083906124b4565b6001600160a01b03851660009081526003602090815260408083203384529091529020555b610b59848484611db7565b5060019392505050565b600654610100900460ff1680610b785750303b155b80610b86575060065460ff16155b610be95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161040e565b600654610100900460ff16158015610c0b576006805461ffff19166101011790555b6006805462010000330262010000600160b01b0319909116179055600780546001600160a01b038581166001600160a01b0319928316179092556008805492851692909116919091179055610d2e604080518082018252600c81526b5361666573776170204c507360a01b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f1f70e3dc283e307f749488509b418d5a1522e0c2ae4f67d16de0357912dd8837818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600455565b6001600d558015610d45576006805461ff00191690555b505050565b6000600d54600114610d6e5760405162461bcd60e51b815260040161040e906123a0565b6000600d55600654604051633e0d6b6760e21b8152620100009091046001600160a01b03169063f835ad9c90610da890859060040161227e565b602060405180830381865afa158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de991906123e7565b15610e065760405162461bcd60e51b815260040161040e90612409565b600080610e11610a8e565b506007546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a0823190610e4b90309060040161227e565b602060405180830381865afa158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c9190612485565b6008546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610ec290309060040161227e565b602060405180830381865afa158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f039190612485565b90506000610f1a6001600160701b038616846124b4565b90506000610f316001600160701b038616846124b4565b90506000610f3f8787611e4d565b60015490915080610f7d576103e8610f5f610f5a85876124cb565b611f8c565b610f6991906124b4565b9850610f7860006103e8611ffc565b610fc4565b610fc16001600160701b038916610f9483876124cb565b610f9e9190612500565b6001600160701b038916610fb284876124cb565b610fbc9190612500565b61207c565b98505b600089116110125760405162461bcd60e51b8152602060048201526027602482015260008051602061263083398151915260448201526617d3525395115160ca1b606482015260840161040e565b61101c8a8a611ffc565b61102886868a8a611b6b565b81156110515760095461104d906001600160701b03600160701b8204811691166124cb565b600c555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600d5550949695505050505050565b600080600d546001146110c45760405162461bcd60e51b815260040161040e906123a0565b6000600d55600654604051633e0d6b6760e21b8152620100009091046001600160a01b03169063f835ad9c906110fe90869060040161227e565b602060405180830381865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f91906123e7565b1561115c5760405162461bcd60e51b815260040161040e90612409565b600080611167610a8e565b506007546008546040516370a0823160e01b81529395509193506001600160a01b039081169291169060009083906370a08231906111a990309060040161227e565b602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190612485565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161121a919061227e565b602060405180830381865afa158015611237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125b9190612485565b306000908152600260205260408120549192506112788888611e4d565b6001549091508061128986856124cb565b6112939190612500565b9a50806112a085856124cb565b6112aa9190612500565b995060008b1180156112bc575060008a115b6113065760405162461bcd60e51b8152602060048201526027602482015260008051602061263083398151915260448201526617d0955493915160ca1b606482015260840161040e565b6113103084612094565b61131b878d8d6118e7565b611326868d8c6118e7565b6040516370a0823160e01b81526001600160a01b038816906370a082319061135290309060040161227e565b602060405180830381865afa15801561136f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113939190612485565b6040516370a0823160e01b81529095506001600160a01b038716906370a08231906113c290309060040161227e565b602060405180830381865afa1580156113df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114039190612485565b935061141185858b8b611b6b565b811561143a57600954611436906001600160701b03600160701b8204811691166124cb565b600c555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600d81905550915091565b6000610ac5338484611db7565b600d546001146114c55760405162461bcd60e51b815260040161040e906123a0565b6000600d556007546008546009546040516370a0823160e01b81526001600160a01b03938416939092169161156891849186916001600160701b03169083906370a082319061151890309060040161227e565b602060405180830381865afa158015611535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115599190612485565b61156391906124b4565b6118e7565b6009546040516370a0823160e01b81526115b09183918691600160701b90046001600160701b0316906001600160a01b038416906370a082319061151890309060040161227e565b50506001600d5550565b428410156115fe5760405162461bcd60e51b815260206004820152601160248201527014d859995cddd85c0e8811561412549151607a1b604482015260640161040e565b6004546001600160a01b03881660009081526005602052604081208054919291600080516020612670833981519152918b918b918b91908761163f83612514565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016116b892919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611723573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117595750886001600160a01b0316816001600160a01b0316145b6117a35760405162461bcd60e51b815260206004820152601b60248201527a53616665737761703a20494e56414c49445f5349474e415455524560281b604482015260640161040e565b6117ae898989611d55565b505050505050505050565b600d546001146117db5760405162461bcd60e51b815260040161040e906123a0565b6000600d556007546040516370a0823160e01b81526118e0916001600160a01b0316906370a082319061181290309060040161227e565b602060405180830381865afa15801561182f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118539190612485565b6008546040516370a0823160e01b81526001600160a01b03909116906370a082319061188390309060040161227e565b602060405180830381865afa1580156118a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c49190612485565b6009546001600160701b0380821691600160701b900416611b6b565b6001600d55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b6020909101525160009081906001600160a01b038616907fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b9061195a908790879060240161252f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516119989190612548565b6000604051808303816000865af19150503d80600081146119d5576040519150601f19603f3d011682016040523d82523d6000602084013e6119da565b606091505b5091509150818015611a04575080511580611a04575080806020019051810190611a0491906123e7565b611a4c5760405162461bcd60e51b815260206004820152601960248201527814d859995cddd85c0e881514905394d1915497d19052531151603a1b604482015260640161040e565b5050505050565b6000600660029054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa158015611aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acc91906123ca565b9050600080826001600160a01b0316639d248f5686866040518363ffffffff1660e01b8152600401611aff92919061252f565b6040805180830381865afa158015611b1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3f9190612564565b91509150600082118015611b5b57506001600160a01b03811615155b15611a4c57611a4c8582846118e7565b6001600160701b038411801590611b8957506001600160701b038311155b611bca5760405162461bcd60e51b815260206004820152601260248201527153616665737761703a204f564552464c4f5760701b604482015260640161040e565b6000611bda600160201b42612589565b600954909150600090611bfa90600160e01b900463ffffffff168361259d565b905060008163ffffffff16118015611c1a57506001600160701b03841615155b8015611c2e57506001600160701b03831615155b15611cbd578063ffffffff16611c5685611c478661210e565b6001600160e01b03169061212d565b6001600160e01b0316611c6991906124cb565b600a6000828254611c7a91906125c2565b909155505063ffffffff8116611c9384611c478761210e565b6001600160e01b0316611ca691906124cb565b600b6000828254611cb791906125c2565b90915550505b6009805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260026020526040902054611ddb9082906124b4565b6001600160a01b038085166000908152600260205260408082209390935590841681522054611e0b9082906125c2565b6001600160a01b03808416600081815260026020526040908190209390935591519085169060008051602061265083398151915290611daa9085815260200190565b600080600660029054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec791906123ca565b600c546001600160a01b038216158015945091925090611f78578015611f73576000611f02610f5a6001600160701b038088169089166124cb565b90506000611f0f83611f8c565b905080821115611f70576000611f2582846124b4565b600154611f3291906124cb565b9050600082611f428560036124cb565b611f4c91906125c2565b90506000611f5a8284612500565b90508015611f6c57611f6c8782611ffc565b5050505b50505b611f84565b8015611f84576000600c555b505092915050565b60006003821115611fed5750806000611fa6600283612500565b611fb19060016125c2565b90505b81811015611fe757905080600281611fcc8186612500565b611fd691906125c2565b611fe09190612500565b9050611fb4565b50919050565b8115611ff7575060015b919050565b8060015461200a91906125c2565b6001556001600160a01b0382166000908152600260205260409020546120319082906125c2565b6001600160a01b038316600081815260026020526040808220939093559151909190600080516020612650833981519152906120709085815260200190565b60405180910390a35050565b600081831061208b578161208d565b825b9392505050565b6001600160a01b0382166000908152600260205260409020546120b89082906124b4565b6001600160a01b0383166000908152600260205260409020556001546120df9082906124b4565b6001556040518181526000906001600160a01b0384169060008051602061265083398151915290602001612070565b6000612127600160701b6001600160701b0384166125da565b92915050565b600061208d6001600160701b03831684612609565b6001600160a01b038116811461215757600080fd5b50565b60008060008060006080868803121561217257600080fd5b8535945060208601359350604086013561218b81612142565b925060608601356001600160401b03808211156121a757600080fd5b818801915088601f8301126121bb57600080fd5b8135818111156121ca57600080fd5b8960208285010111156121dc57600080fd5b9699959850939650602001949392505050565b60005b8381101561220a5781810151838201526020016121f2565b83811115612219576000848401525b50505050565b602081526000825180602084015261223e8160408501602087016121ef565b601f01601f19169190910160400192915050565b6000806040838503121561226557600080fd5b823561227081612142565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6000806000606084860312156122a757600080fd5b83356122b281612142565b925060208401356122c281612142565b929592945050506040919091013590565b600080604083850312156122e657600080fd5b82356122f181612142565b9150602083013561230181612142565b809150509250929050565b60006020828403121561231e57600080fd5b813561208d81612142565b600080600080600080600060e0888a03121561234457600080fd5b873561234f81612142565b9650602088013561235f81612142565b95506040880135945060608801359350608088013560ff8116811461238357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60208082526010908201526f14d859995cddd85c0e881313d0d2d15160821b604082015260600190565b6000602082840312156123dc57600080fd5b815161208d81612142565b6000602082840312156123f957600080fd5b8151801515811461208d57600080fd5b6020808252601690820152751059191c995cdcc81a5cc8189b1858dadb1a5cdd195960521b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561249757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156124c6576124c661249e565b500390565b60008160001904831182151516156124e5576124e561249e565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261250f5761250f6124ea565b500490565b60006000198214156125285761252861249e565b5060010190565b6001600160a01b03929092168252602082015260400190565b6000825161255a8184602087016121ef565b9190910192915050565b6000806040838503121561257757600080fd5b82519150602083015161230181612142565b600082612598576125986124ea565b500690565b600063ffffffff838116908316818110156125ba576125ba61249e565b039392505050565b600082198211156125d5576125d561249e565b500190565b60006001600160e01b03828116848216811515828404821116156126005761260061249e565b02949350505050565b60006001600160e01b0383811680612623576126236124ea565b9216919091049291505056fe53616665737761703a20494e53554646494349454e545f4c4951554944495459ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9a26469706673582212203dcce7c5f04a4f7641b209f22bc0d45831ec85da6f450bb38829f3363ff3531164736f6c634300080b0033";

type SafeswapPairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeswapPairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeswapPair__factory extends ContractFactory {
  constructor(...args: SafeswapPairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeswapPair> {
    return super.deploy(overrides || {}) as Promise<SafeswapPair>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeswapPair {
    return super.attach(address) as SafeswapPair;
  }
  override connect(signer: Signer): SafeswapPair__factory {
    return super.connect(signer) as SafeswapPair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeswapPairInterface {
    return new utils.Interface(_abi) as SafeswapPairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeswapPair {
    return new Contract(address, _abi, signerOrProvider) as SafeswapPair;
  }
}
