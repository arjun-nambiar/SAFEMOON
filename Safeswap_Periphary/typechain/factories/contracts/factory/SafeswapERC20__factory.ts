/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SafeswapERC20,
  SafeswapERC20Interface,
} from "../../../contracts/factory/SafeswapERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061084d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b4578063095ea7b3146100f557806318160ddd1461011857806323b872dd1461012f57806330adf81f14610142578063313ce567146101575780633644e5151461017157806370a082311461017a5780637ecebe001461019a57806395d89b41146101ba578063a9059cbb146101df578063d505accf146101f2578063dd62ed3e14610207575b600080fd5b6100df6040518060400160405280600c81526020016b5361666573776170204c507360a01b81525081565b6040516100ec91906105f8565b60405180910390f35b610108610103366004610669565b610232565b60405190151581526020016100ec565b61012160015481565b6040519081526020016100ec565b61010861013d366004610693565b610248565b6101216000805160206107f883398151915281565b61015f601281565b60405160ff90911681526020016100ec565b61012160045481565b6101216101883660046106cf565b60026020526000908152604090205481565b6101216101a83660046106cf565b60056020526000908152604090205481565b6100df6040518060400160405280600681526020016505346532d4c560d41b81525081565b6101086101ed366004610669565b6102dd565b6102056102003660046106f1565b6102ea565b005b610121610215366004610764565b600360209081526000928352604080842090915290825290205481565b600061023f3384846104ee565b50600192915050565b6001600160a01b0383166000908152600360209081526040808320338452909152812054600019146102c8576001600160a01b03841660009081526003602090815260408083203384529091529020546102a39083906107ad565b6001600160a01b03851660009081526003602090815260408083203384529091529020555b6102d3848484610550565b5060019392505050565b600061023f338484610550565b428410156103335760405162461bcd60e51b815260206004820152601160248201527014d859995cddd85c0e8811561412549151607a1b60448201526064015b60405180910390fd5b6004546001600160a01b038816600090815260056020526040812080549192916000805160206107f8833981519152918b918b918b919087610374836107c4565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016103ed92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610458573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061048e5750886001600160a01b0316816001600160a01b0316145b6104d85760405162461bcd60e51b815260206004820152601b60248201527a53616665737761703a20494e56414c49445f5349474e415455524560281b604482015260640161032a565b6104e38989896104ee565b505050505050505050565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600260205260409020546105749082906107ad565b6001600160a01b0380851660009081526002602052604080822093909355908416815220546105a49082906107df565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105439085815260200190565b600060208083528351808285015260005b8181101561062557858101830151858201604001528201610609565b81811115610637576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461066457600080fd5b919050565b6000806040838503121561067c57600080fd5b6106858361064d565b946020939093013593505050565b6000806000606084860312156106a857600080fd5b6106b18461064d565b92506106bf6020850161064d565b9150604084013590509250925092565b6000602082840312156106e157600080fd5b6106ea8261064d565b9392505050565b600080600080600080600060e0888a03121561070c57600080fd5b6107158861064d565b96506107236020890161064d565b95506040880135945060608801359350608088013560ff8116811461074757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561077757600080fd5b6107808361064d565b915061078e6020840161064d565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156107bf576107bf610797565b500390565b60006000198214156107d8576107d8610797565b5060010190565b600082198211156107f2576107f2610797565b50019056fe6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9a2646970667358221220b8886fdcebf00b15608cd6edf845fae004ed0e35f3b01c40ebade88eb28a183664736f6c634300080b0033";

type SafeswapERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeswapERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeswapERC20__factory extends ContractFactory {
  constructor(...args: SafeswapERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeswapERC20> {
    return super.deploy(overrides || {}) as Promise<SafeswapERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeswapERC20 {
    return super.attach(address) as SafeswapERC20;
  }
  override connect(signer: Signer): SafeswapERC20__factory {
    return super.connect(signer) as SafeswapERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeswapERC20Interface {
    return new utils.Interface(_abi) as SafeswapERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeswapERC20 {
    return new Contract(address, _abi, signerOrProvider) as SafeswapERC20;
  }
}
