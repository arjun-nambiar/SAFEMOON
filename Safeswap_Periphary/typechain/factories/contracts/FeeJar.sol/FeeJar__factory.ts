/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FeeJar,
  FeeJarInterface,
} from "../../../contracts/FeeJar.sol/FeeJar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "newFee",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "oldFee",
        type: "uint32",
      },
    ],
    name: "BuyBackAndBurnFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feePayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyBackAndBurnFeeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpFeeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supportFeeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyBackAndBurnFeeCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "supportFeeCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lpFeeCollector",
        type: "address",
      },
    ],
    name: "Fee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLPFeeCollector",
        type: "address",
      },
    ],
    name: "LPFeeCollectorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "newFee",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "oldFee",
        type: "uint32",
      },
    ],
    name: "LPFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newCollector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldBuyBackAndBurnFeeCollector",
        type: "address",
      },
    ],
    name: "NetworFeeCollectorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "newFee",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "oldFee",
        type: "uint32",
      },
    ],
    name: "SupportFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawBNB",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_JAR_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_SETTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyBackAndBurnFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyBackAndBurnFeeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
    ],
    name: "getFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "buyBackAndBurnFeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supportFeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeJarAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeSetter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_buyBackAndBurnFeeCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpFeeCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxPercentage",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_buyBackAndBurnFee",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_lpFee",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_supportFee",
        type: "uint32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpFeeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newFee",
        type: "uint32",
      },
    ],
    name: "setBuyBackAndBurnFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCollector",
        type: "address",
      },
    ],
    name: "setBuyBackAndBurnFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newFee",
        type: "uint32",
      },
    ],
    name: "setLPFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCollector",
        type: "address",
      },
    ],
    name: "setLPFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newFee",
        type: "uint32",
      },
    ],
    name: "setSupportFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportFee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a3a806100206000396000f3fe6080604052600436106101275760003560e01c806301ffc9a714610130578063248a9ca3146101655780632f2ff15d1461019357806335b6003b146101b357806336568abe146101c957806347f86860146101e95780634ff3903714610209578063704ce43e14610241578063726094711461027a5780638b4e2f761461029a57806391d14854146102ba57806393c73fed146102da5780639704122c146102fa57806399ad79a714610335578063a217fddf14610355578063c17a799b1461036a578063c45a01551461038a578063ca302ffa146103aa578063d547741f146103ce578063ddca3f43146103ee578063dfb13575146103f6578063e934768314610418578063f0dbd3c41461043a578063f3bcb64114610457578063fc078c6d1461047757005b3661012e57005b005b34801561013c57600080fd5b5061015061014b366004611579565b610497565b60405190151581526020015b60405180910390f35b34801561017157600080fd5b506101856101803660046115a3565b6104ce565b60405190815260200161015c565b34801561019f57600080fd5b5061012e6101ae3660046115d1565b6104e3565b3480156101bf57600080fd5b5061018560985481565b3480156101d557600080fd5b5061012e6101e43660046115d1565b610504565b3480156101f557600080fd5b5061012e610204366004611601565b610587565b34801561021557600080fd5b50609a54610229906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b34801561024d57600080fd5b5060975461026590600160201b900463ffffffff1681565b60405163ffffffff909116815260200161015c565b34801561028657600080fd5b5061012e610295366004611601565b610622565b3480156102a657600080fd5b5061012e6102b5366004611601565b6106d5565b3480156102c657600080fd5b506101506102d53660046115d1565b610770565b3480156102e657600080fd5b50609b54610229906001600160a01b031681565b34801561030657600080fd5b5061031a6103153660046115a3565b61079b565b6040805193845260208401929092529082015260600161015c565b34801561034157600080fd5b5061012e610350366004611637565b610858565b34801561036157600080fd5b50610185600081565b34801561037657600080fd5b5061012e610385366004611652565b6108f6565b34801561039657600080fd5b50609954610229906001600160a01b031681565b3480156103b657600080fd5b5060975461026590600160401b900463ffffffff1681565b3480156103da57600080fd5b5061012e6103e93660046115d1565b610cab565b61031a610cc7565b34801561040257600080fd5b5061018560008051602061196583398151915281565b34801561042457600080fd5b5061018560008051602061198583398151915281565b34801561044657600080fd5b506097546102659063ffffffff1681565b34801561046357600080fd5b5061012e610472366004611637565b61104a565b34801561048357600080fd5b5061012e610492366004611637565b6110f9565b60006001600160e01b03198216637965db0b60e01b14806104c857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60009081526065602052604090206001015490565b6104ec826104ce565b6104f5816111a8565b6104ff83836111b5565b505050565b6001600160a01b03811633146105795760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610583828261123b565b5050565b61059f60008051602061196583398151915233610770565b6105bb5760405162461bcd60e51b8152600401610570906116fd565b609a546040517f7afc83a35e7361ceb1e95001d0bef759d1ab977a2034889fbaedc71e36d6fe29916105f89184916001600160a01b031690611745565b60405180910390a1609a80546001600160a01b0319166001600160a01b0392909216919091179055565b61063a60008051602061196583398151915233610770565b6106565760405162461bcd60e51b8152600401610570906116fd565b60405147906001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561068e573d6000803e3d6000fd5b50604080516001600160a01b0384168152602081018390527fceac4c050cf0bd5320be38f58d0d370278667b15662191291c09d7fb144371b3910160405180910390a15050565b6106ed60008051602061196583398151915233610770565b6107095760405162461bcd60e51b8152600401610570906116fd565b609b546040517f6f0f81c6fd6b21ee193c68ce5da2ea2fa82eafcf21d0f4afd247275d7dc7b250916107469184916001600160a01b031690611745565b60405180910390a1609b80546001600160a01b0319166001600160a01b0392909216919091179055565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6097546000908190819063ffffffff16156107d3576098546097546107c69063ffffffff1686611775565b6107d09190611794565b92505b609754600160201b900463ffffffff16156108125760985460975461080590600160201b900463ffffffff1686611775565b61080f9190611794565b90505b609754600160401b900463ffffffff16156108515760985460975461084490600160401b900463ffffffff1686611775565b61084e9190611794565b91505b9193909250565b61087060008051602061198583398151915233610770565b61088c5760405162461bcd60e51b8152600401610570906117b6565b6098548163ffffffff1611156108b45760405162461bcd60e51b8152600401610570906117fb565b60975460405163ffffffff918216918316906000805160206119c583398151915290600090a36097805463ffffffff191663ffffffff92909216919091179055565b600054610100900460ff16158080156109165750600054600160ff909116105b806109305750303b158015610930575060005460ff166001145b6109935760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610570565b6000805460ff1916600117905580156109b6576000805461ff0019166101001790555b6001600160a01b038816158015906109d657506001600160a01b03871615155b80156109ea57506001600160a01b038a1615155b80156109fe57506001600160a01b03891615155b8015610a1257506001600160a01b03861615155b610a6a5760405162461bcd60e51b8152602060048201526024808201527f4645454a41523a20504c4541534520454e5445522056414c49442041444452456044820152635353455360e01b6064820152608401610570565b848463ffffffff1611158015610a865750848363ffffffff1611155b8015610a985750848263ffffffff1611155b610ae45760405162461bcd60e51b815260206004820152601d60248201527f4645454a41523a20494e434f525245435420464545532056414c5545530000006044820152606401610570565b610aec6112a2565b610b046000805160206119658339815191528061130f565b610b2a60008051602061198583398151915260008051602061196583398151915261130f565b610b426000805160206119658339815191528b611362565b610b5a6000805160206119858339815191528a611362565b609a80546001600160a01b03808b166001600160a01b031992831617909255609b8054928a16929091169190911790556097805463ffffffff861663ffffffff199091168117909155604051600091906000805160206119c5833981519152908390a36097805463ffffffff60201b1916600160201b63ffffffff861690810291909117909155604051600091906000805160206119e5833981519152908390a36097805463ffffffff60401b1916600160401b63ffffffff851690810291909117909155604051600091906000805160206119a5833981519152908390a3609980546001600160a01b0319166001600160a01b03881617905560988590558015610c9f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b610cb4826104ce565b610cbd816111a8565b6104ff838361123b565b600080803480610cdf57506000938493508392509050565b6000806000610ced8461079b565b609754929550909350915060009063ffffffff1615610dbb57609a546040516000916001600160a01b03169086908381818185875af1925050503d8060008114610d53576040519150601f19603f3d011682016040523d82523d6000602084013e610d58565b606091505b5050905080610db95760405162461bcd60e51b815260206004820152602760248201527f53776170204665653a20436f756c64206e6f7420636f6c6c656374206e6574776044820152666f726b2066656560c81b6064820152608401610570565b505b609754600160401b900463ffffffff1615610f1257609960009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e47919061181a565b90506001600160a01b03811615801590610f10576000826001600160a01b03168560405160006040518083038185875af1925050503d8060008114610ea8576040519150601f19603f3d011682016040523d82523d6000602084013e610ead565b606091505b5050905080610f0e5760405162461bcd60e51b815260206004820152602760248201527f53776170204665653a20436f756c64206e6f7420636f6c6c65637420737570706044820152666f72742066656560c81b6064820152608401610570565b505b505b4715610fcd57609b5460405147916000916001600160a01b039091169083908381818185875af1925050503d8060008114610f69576040519150601f19603f3d011682016040523d82523d6000602084013e610f6e565b606091505b5050905080610fca5760405162461bcd60e51b815260206004820152602260248201527f53776170204665653a20436f756c64206e6f7420636f6c6c656374204c5020456044820152610a8960f31b6064820152608401610570565b50505b609a546040805134815260208101879052908101849052606081018590526001600160a01b039182166080820181905291831660a082015260c081019190915232907fa2279bb6bd2616a5b4115b12c83292c4b2ce188fcdb41e45660b34479653527d9060e00160405180910390a2509196909550909350915050565b61106260008051602061198583398151915233610770565b61107e5760405162461bcd60e51b8152600401610570906117b6565b6098548163ffffffff1611156110a65760405162461bcd60e51b8152600401610570906117fb565b60975460405163ffffffff600160401b9092048216918316906000805160206119a583398151915290600090a36097805463ffffffff909216600160401b0263ffffffff60401b19909216919091179055565b61111160008051602061198583398151915233610770565b61112d5760405162461bcd60e51b8152600401610570906117b6565b6098548163ffffffff1611156111555760405162461bcd60e51b8152600401610570906117fb565b60975460405163ffffffff600160201b9092048216918316906000805160206119e583398151915290600090a36097805463ffffffff909216600160201b0263ffffffff60201b19909216919091179055565b6111b2813361136c565b50565b6111bf8282610770565b6105835760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556111f73390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6112458282610770565b156105835760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff1661130d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610570565b565b600061131a836104ce565b600084815260656020526040808220600101859055519192508391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61058382826111b5565b6113768282610770565b61058357611383816113c5565b61138e8360206113d7565b60405160200161139f929190611867565b60408051601f198184030181529082905262461bcd60e51b8252610570916004016118d6565b60606104c86001600160a01b03831660145b606060006113e6836002611775565b6113f1906002611909565b6001600160401b0381111561140857611408611921565b6040519080825280601f01601f191660200182016040528015611432576020820181803683370190505b509050600360fc1b8160008151811061144d5761144d611937565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061147c5761147c611937565b60200101906001600160f81b031916908160001a90535060006114a0846002611775565b6114ab906001611909565b90505b6001811115611523576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106114df576114df611937565b1a60f81b8282815181106114f5576114f5611937565b60200101906001600160f81b031916908160001a90535060049490941c9361151c8161194d565b90506114ae565b5083156115725760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610570565b9392505050565b60006020828403121561158b57600080fd5b81356001600160e01b03198116811461157257600080fd5b6000602082840312156115b557600080fd5b5035919050565b6001600160a01b03811681146111b257600080fd5b600080604083850312156115e457600080fd5b8235915060208301356115f6816115bc565b809150509250929050565b60006020828403121561161357600080fd5b8135611572816115bc565b803563ffffffff8116811461163257600080fd5b919050565b60006020828403121561164957600080fd5b6115728261161e565b60008060008060008060008060006101208a8c03121561167157600080fd5b893561167c816115bc565b985060208a013561168c816115bc565b975060408a013561169c816115bc565b965060608a01356116ac816115bc565b955060808a01356116bc816115bc565b945060a08a013593506116d160c08b0161161e565b92506116df60e08b0161161e565b91506116ee6101008b0161161e565b90509295985092959850929598565b60208082526028908201527f43616c6c6572206d7573742068617665204645455f4a41525f41444d494e5f526040820152674f4c4520726f6c6560c01b606082015260800190565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561178f5761178f61175f565b500290565b6000826117b157634e487b7160e01b600052601260045260246000fd5b500490565b60208082526025908201527f43616c6c6572206d7573742068617665204645455f5345545445525f524f4c4560408201526420726f6c6560d81b606082015260800190565b6020808252600590820152643e3130302560d81b604082015260600190565b60006020828403121561182c57600080fd5b8151611572816115bc565b60005b8381101561185257818101518382015260200161183a565b83811115611861576000848401525b50505050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351611899816017850160208801611837565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118ca816028840160208801611837565b01602801949350505050565b60208152600082518060208401526118f5816040850160208701611837565b601f01601f19169190910160400192915050565b6000821982111561191c5761191c61175f565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161195c5761195c61175f565b50600019019056fead5f894053b79b3f3272d2fb85f516294bcb37fcc5702840cff603e823ce7b60e6ad9a47fbda1dc18de1eb5eeb7d935e5e81b4748f3cfc61e233e64f881820604d4856291d1718eebeb9c7d8ec5aa7ea577f1faa10e55b1f1689add8be3c376c21bb5baefeb906bb0cdaf473e4ece455dbf3c8281370c8cfa36506c97bbbc217a229002b6a6e27545ec75e2df93ec812e88d015c147f49d9edd9fbedb7320197a26469706673582212209326f1f3996e3bfc366f5f71c540afb73b2342898160e1e4f579dbbf773692fb64736f6c634300080b0033";

type FeeJarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeJarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeJar__factory extends ContractFactory {
  constructor(...args: FeeJarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeJar> {
    return super.deploy(overrides || {}) as Promise<FeeJar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeeJar {
    return super.attach(address) as FeeJar;
  }
  override connect(signer: Signer): FeeJar__factory {
    return super.connect(signer) as FeeJar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeJarInterface {
    return new utils.Interface(_abi) as FeeJarInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FeeJar {
    return new Contract(address, _abi, signerOrProvider) as FeeJar;
  }
}
