/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SafeswapLibrary,
  SafeswapLibraryInterface,
} from "../../../contracts/libraries/SafeswapLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "getConfigFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61011f610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063b93fe65a146038575b600080fd5b605b60048036036020811015604c57600080fd5b50356001600160a01b03166074565b6040805192835260208301919091528051918290030190f35b600080826001600160a01b0316637ae316d06040518163ffffffff1660e01b8152600401604080518083038186803b15801560ae57600080fd5b505afa15801560c1573d6000803e3d6000fd5b505050506040513d604081101560d657600080fd5b508051602090910151909250905091509156fea2646970667358221220e9ea73aab2eefd0300966dece06ad55744b1ca2bac7b43bcf4795fc7d9ba0cd864736f6c63430006060033";

type SafeswapLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeswapLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeswapLibrary__factory extends ContractFactory {
  constructor(...args: SafeswapLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeswapLibrary> {
    return super.deploy(overrides || {}) as Promise<SafeswapLibrary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeswapLibrary {
    return super.attach(address) as SafeswapLibrary;
  }
  override connect(signer: Signer): SafeswapLibrary__factory {
    return super.connect(signer) as SafeswapLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeswapLibraryInterface {
    return new utils.Interface(_abi) as SafeswapLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeswapLibrary {
    return new Contract(address, _abi, signerOrProvider) as SafeswapLibrary;
  }
}
