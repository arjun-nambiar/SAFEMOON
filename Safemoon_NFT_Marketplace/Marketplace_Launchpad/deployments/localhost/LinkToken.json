{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b85ecc8b33562c8e51a201f37584db1d665d1b5a6416982d78f2c4cb311f7b8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "784338",
    "logsBloom": "0x
    "blockHash": "0xb2fc9424b5887b1f915e8b0d7215b295c1c82a7150fba0a4427896a52591552d",
    "transactionHash": "0x4b85ecc8b33562c8e51a201f37584db1d665d1b5a6416982d78f2c4cb311f7b8",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "784338",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5e70b837f8587354f27f1fd608f10e16",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"transfer(address,uint256)\":{\"details\":\"transfer token to a specified address.\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"transfer token to a specified address with additional data if the recipient is a contract.\",\"params\":{\"_data\":\"The extra data to be passed to the receiving contract.\",\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Base/mocks/LinkToken.sol\":\"LinkToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Base/mocks/LinkToken.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2017-09-23\\n */\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal returns (uint256) {\\n        uint256 c = a * b;\\n        assert(a == 0 || c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/179\\n */\\nabstract contract ERC20Basic {\\n    //   uint256 internal totalSupply;\\n    function balanceOf(address who) public virtual returns (uint256);\\n\\n    function transfer(address to, uint256 value) public virtual returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\nabstract contract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) external view virtual returns (uint256);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external virtual returns (bool);\\n\\n    function approve(address spender, uint256 value) external virtual returns (bool);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nabstract contract ERC677 is ERC20 {\\n    function transferAndCall(\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) public virtual returns (bool success);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value, bytes data);\\n}\\n\\nabstract contract ERC677Receiver {\\n    function onTokenTransfer(\\n        address _sender,\\n        uint256 _value,\\n        bytes memory _data\\n    ) external virtual;\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is ERC20Basic {\\n    using SafeMath for uint256;\\n\\n    mapping(address => uint256) balances;\\n\\n    /**\\n     * @dev transfer token for a specified address\\n     * @param _to The address to transfer to.\\n     * @param _value The amount to be transferred.\\n     */\\n    function transfer(address _to, uint256 _value) public virtual override returns (bool) {\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(_value);\\n        emit Transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n\\n    function balanceOf(address _owner) public view virtual override returns (uint256 balance) {\\n        return balances[_owner];\\n    }\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is ERC20, BasicToken {\\n    using SafeMath for uint256;\\n\\n    mapping(address => mapping(address => uint256)) allowed;\\n\\n    /**\\n     * @dev Transfer tokens from one address to another\\n     * @param _from address The address which you want to send tokens from\\n     * @param _to address The address which you want to transfer to\\n     * @param _value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) public virtual override returns (bool) {\\n        uint256 _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // require (_value <= _allowance);\\n\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(_value);\\n        allowed[_from][msg.sender] = _allowance.sub(_value);\\n        emit Transfer(_from, _to, _value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * @param _spender The address which will spend the funds.\\n     * @param _value The amount of tokens to be spent.\\n     */\\n    function approve(address _spender, uint256 _value) public virtual override returns (bool) {\\n        allowed[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n\\n    function allowance(address _owner, address _spender) public view virtual override returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /*\\n     * approve should be called when allowed[_spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     */\\n    function increaseApproval(address _spender, uint256 _addedValue) public returns (bool success) {\\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\n        return true;\\n    }\\n\\n    function decreaseApproval(address _spender, uint256 _subtractedValue) public returns (bool success) {\\n        uint256 oldValue = allowed[msg.sender][_spender];\\n        if (_subtractedValue > oldValue) {\\n            allowed[msg.sender][_spender] = 0;\\n        } else {\\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\\n        }\\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\n        return true;\\n    }\\n}\\n\\nabstract contract ERC677Token is ERC677 {\\n    /**\\n     * @dev transfer token to a contract address with additional data if the recipient is a contact.\\n     * @param _to The address to transfer to.\\n     * @param _value The amount to be transferred.\\n     * @param _data The extra data to be passed to the receiving contract.\\n     */\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes memory _data\\n    ) public virtual override returns (bool success) {\\n        // super.transfer(_to, _value);\\n        transfer(_to, _value);\\n        emit Transfer(msg.sender, _to, _value, _data);\\n        if (isContract(_to)) {\\n            contractFallback(_to, _value, _data);\\n        }\\n        return true;\\n    }\\n\\n    // PRIVATE\\n\\n    function contractFallback(\\n        address _to,\\n        uint256 _value,\\n        bytes memory _data\\n    ) private {\\n        ERC677Receiver receiver = ERC677Receiver(_to);\\n        receiver.onTokenTransfer(msg.sender, _value, _data);\\n    }\\n\\n    function isContract(address _addr) private returns (bool hasCode) {\\n        uint256 length;\\n        assembly {\\n            length := extcodesize(_addr)\\n        }\\n        return length > 0;\\n    }\\n}\\n\\ncontract LinkToken is StandardToken, ERC677Token {\\n    uint256 public totalSupply = 10**27;\\n    string public name = \\\"ChainLink Token\\\";\\n    uint8 public decimals = 18;\\n    string public symbol = \\\"LINK\\\";\\n\\n    constructor() public {\\n        balances[msg.sender] = totalSupply;\\n    }\\n\\n    /**\\n     * @dev transfer token to a specified address with additional data if the recipient is a contract.\\n     * @param _to The address to transfer to.\\n     * @param _value The amount to be transferred.\\n     * @param _data The extra data to be passed to the receiving contract.\\n     */\\n    function transferAndCall(\\n        address _to,\\n        uint256 _value,\\n        bytes memory _data\\n    ) public virtual override validRecipient(_to) returns (bool success) {\\n        return super.transferAndCall(_to, _value, _data);\\n    }\\n\\n    /**\\n     * @dev transfer token to a specified address.\\n     * @param _to The address to transfer to.\\n     * @param _value The amount to be transferred.\\n     */\\n    function transfer(address _to, uint256 _value)\\n        public\\n        virtual\\n        override(BasicToken, ERC20Basic)\\n        validRecipient(_to)\\n        returns (bool success)\\n    {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * @param _spender The address which will spend the funds.\\n     * @param _value The amount of tokens to be spent.\\n     */\\n    function approve(address _spender, uint256 _value)\\n        public\\n        virtual\\n        override(StandardToken, ERC20)\\n        validRecipient(_spender)\\n        returns (bool)\\n    {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another\\n     * @param _from address The address which you want to send tokens from\\n     * @param _to address The address which you want to transfer to\\n     * @param _value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) public override(StandardToken, ERC20) validRecipient(_to) returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    // MODIFIERS\\n\\n    modifier validRecipient(address _recipient) {\\n        require(_recipient != address(0) && _recipient != address(this));\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x7059e92335004dcd961b27a9a820cacfe193b63ac79ae12dcc6172d789368ea9\"}},\"version\":1}",
  "bytecode": "0x6b033b2e3c9fd0803ce800000060025560c0604052600f60809081526e21b430b4b72634b735902a37b5b2b760891b60a05260039062000040908262000144565b506004805460ff1916601217815560408051808201909152908152634c494e4b60e01b602082015260059062000077908262000144565b503480156200008557600080fd5b506002543360009081526020819052604090205562000210565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ca57607f821691505b602082108103620000eb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013f57600081815260208120601f850160051c810160208610156200011a5750805b601f850160051c820191505b818110156200013b5782815560010162000126565b5050505b505050565b81516001600160401b038111156200016057620001606200009f565b6200017881620001718454620000b5565b84620000f1565b602080601f831160018114620001b05760008415620001975750858301515b600019600386901b1c1916600185901b1785556200013b565b600085815260208120601f198616915b82811015620001e157888601518255948401946001909101908401620001c0565b5085821015620002005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b1280620002206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636618846311610071578063661884631461015657806370a082311461016957806395d89b4114610192578063a9059cbb1461019a578063d73dd623146101ad578063dd62ed3e146101c057600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce567146101245780634000aea014610143575b600080fd5b6100c16101f9565b6040516100ce919061084c565b60405180910390f35b6100ea6100e536600461087b565b610287565b60405190151581526020016100ce565b61010360025481565b6040519081526020016100ce565b6100ea61011f3660046108a5565b6102c6565b6004546101319060ff1681565b60405160ff90911681526020016100ce565b6100ea6101513660046108f7565b610307565b6100ea61016436600461087b565b61033f565b6101036101773660046109c2565b6001600160a01b031660009081526020819052604090205490565b6100c1610429565b6100ea6101a836600461087b565b610436565b6100ea6101bb36600461087b565b61046d565b6101036101ce3660046109dd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6003805461020690610a10565b80601f016020809104026020016040519081016040528092919081815260200182805461023290610a10565b801561027f5780601f106102545761010080835404028352916020019161027f565b820191906000526020600020905b81548152906001019060200180831161026257829003601f168201915b505050505081565b6000826001600160a01b038116158015906102ab57506001600160a01b0381163014155b6102b457600080fd5b6102be84846104ff565b949350505050565b6000826001600160a01b038116158015906102ea57506001600160a01b0381163014155b6102f357600080fd5b6102fe85858561055a565b95945050505050565b6000836001600160a01b0381161580159061032b57506001600160a01b0381163014155b61033457600080fd5b6102fe858585610650565b3360009081526001602090815260408083206001600160a01b038616845290915281205480831115610394573360009081526001602090815260408083206001600160a01b03881684529091528120556103c3565b61039e81846106c6565b3360009081526001602090815260408083206001600160a01b03891684529091529020555b3360008181526001602090815260408083206001600160a01b038916808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6005805461020690610a10565b6000826001600160a01b0381161580159061045a57506001600160a01b0381163014155b61046357600080fd5b6102be84846106e9565b3360009081526001602090815260408083206001600160a01b038616845290915281205461049b908361077d565b3360008181526001602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104ee9086815260200190565b6001600160a01b03831660008181526001602090815260408083203384528252808320549383529082905281205490919061059590846106c6565b6001600160a01b0380871660009081526020819052604080822093909355908616815220546105c4908461077d565b6001600160a01b0385166000908152602081905260409020556105e781846106c6565b6001600160a01b03868116600081815260016020908152604080832033845282529182902094909455518681529187169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b600061065c8484610436565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040516106a2929190610a4a565b60405180910390a3833b156106bc576106bc84848461079c565b5060019392505050565b6000828211156106d8576106d8610a63565b6106e28284610a8f565b9392505050565b3360009081526020819052604081205461070390836106c6565b33600090815260208190526040808220929092556001600160a01b0385168152205461072f908361077d565b6001600160a01b038416600081815260208181526040918290209390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104ee565b60008061078a8385610aa2565b9050838110156106e2576106e2610a63565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed36906107ce90339087908790600401610ab5565b600060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b5050505050505050565b6000815180845260005b8181101561082c57602081850181015186830182015201610810565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006106e26020830184610806565b80356001600160a01b038116811461087657600080fd5b919050565b6000806040838503121561088e57600080fd5b6108978361085f565b946020939093013593505050565b6000806000606084860312156108ba57600080fd5b6108c38461085f565b92506108d16020850161085f565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561090c57600080fd5b6109158461085f565b925060208401359150604084013567ffffffffffffffff8082111561093957600080fd5b818601915086601f83011261094d57600080fd5b81358181111561095f5761095f6108e1565b604051601f8201601f19908116603f01168101908382118183101715610987576109876108e1565b816040528281528960208487010111156109a057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156109d457600080fd5b6106e28261085f565b600080604083850312156109f057600080fd5b6109f98361085f565b9150610a076020840161085f565b90509250929050565b600181811c90821680610a2457607f821691505b602082108103610a4457634e487b7160e01b600052602260045260246000fd5b50919050565b8281526040602082015260006102be6040830184610806565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561042357610423610a79565b8082018082111561042357610423610a79565b60018060a01b03841681528260208201526060604082015260006102fe606083018461080656fea2646970667358221220765deb6a6c79e99634ce6cb34bb56050cbbffaf98c009c2195c898555c66ed0a64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80636618846311610071578063661884631461015657806370a082311461016957806395d89b4114610192578063a9059cbb1461019a578063d73dd623146101ad578063dd62ed3e146101c057600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce567146101245780634000aea014610143575b600080fd5b6100c16101f9565b6040516100ce919061084c565b60405180910390f35b6100ea6100e536600461087b565b610287565b60405190151581526020016100ce565b61010360025481565b6040519081526020016100ce565b6100ea61011f3660046108a5565b6102c6565b6004546101319060ff1681565b60405160ff90911681526020016100ce565b6100ea6101513660046108f7565b610307565b6100ea61016436600461087b565b61033f565b6101036101773660046109c2565b6001600160a01b031660009081526020819052604090205490565b6100c1610429565b6100ea6101a836600461087b565b610436565b6100ea6101bb36600461087b565b61046d565b6101036101ce3660046109dd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6003805461020690610a10565b80601f016020809104026020016040519081016040528092919081815260200182805461023290610a10565b801561027f5780601f106102545761010080835404028352916020019161027f565b820191906000526020600020905b81548152906001019060200180831161026257829003601f168201915b505050505081565b6000826001600160a01b038116158015906102ab57506001600160a01b0381163014155b6102b457600080fd5b6102be84846104ff565b949350505050565b6000826001600160a01b038116158015906102ea57506001600160a01b0381163014155b6102f357600080fd5b6102fe85858561055a565b95945050505050565b6000836001600160a01b0381161580159061032b57506001600160a01b0381163014155b61033457600080fd5b6102fe858585610650565b3360009081526001602090815260408083206001600160a01b038616845290915281205480831115610394573360009081526001602090815260408083206001600160a01b03881684529091528120556103c3565b61039e81846106c6565b3360009081526001602090815260408083206001600160a01b03891684529091529020555b3360008181526001602090815260408083206001600160a01b038916808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6005805461020690610a10565b6000826001600160a01b0381161580159061045a57506001600160a01b0381163014155b61046357600080fd5b6102be84846106e9565b3360009081526001602090815260408083206001600160a01b038616845290915281205461049b908361077d565b3360008181526001602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104ee9086815260200190565b6001600160a01b03831660008181526001602090815260408083203384528252808320549383529082905281205490919061059590846106c6565b6001600160a01b0380871660009081526020819052604080822093909355908616815220546105c4908461077d565b6001600160a01b0385166000908152602081905260409020556105e781846106c6565b6001600160a01b03868116600081815260016020908152604080832033845282529182902094909455518681529187169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b600061065c8484610436565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040516106a2929190610a4a565b60405180910390a3833b156106bc576106bc84848461079c565b5060019392505050565b6000828211156106d8576106d8610a63565b6106e28284610a8f565b9392505050565b3360009081526020819052604081205461070390836106c6565b33600090815260208190526040808220929092556001600160a01b0385168152205461072f908361077d565b6001600160a01b038416600081815260208181526040918290209390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104ee565b60008061078a8385610aa2565b9050838110156106e2576106e2610a63565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed36906107ce90339087908790600401610ab5565b600060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b5050505050505050565b6000815180845260005b8181101561082c57602081850181015186830182015201610810565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006106e26020830184610806565b80356001600160a01b038116811461087657600080fd5b919050565b6000806040838503121561088e57600080fd5b6108978361085f565b946020939093013593505050565b6000806000606084860312156108ba57600080fd5b6108c38461085f565b92506108d16020850161085f565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561090c57600080fd5b6109158461085f565b925060208401359150604084013567ffffffffffffffff8082111561093957600080fd5b818601915086601f83011261094d57600080fd5b81358181111561095f5761095f6108e1565b604051601f8201601f19908116603f01168101908382118183101715610987576109876108e1565b816040528281528960208487010111156109a057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000602082840312156109d457600080fd5b6106e28261085f565b600080604083850312156109f057600080fd5b6109f98361085f565b9150610a076020840161085f565b90509250929050565b600181811c90821680610a2457607f821691505b602082108103610a4457634e487b7160e01b600052602260045260246000fd5b50919050565b8281526040602082015260006102be6040830184610806565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561042357610423610a79565b8082018082111561042357610423610a79565b60018060a01b03841681528260208201526060604082015260006102fe606083018461080656fea2646970667358221220765deb6a6c79e99634ce6cb34bb56050cbbffaf98c009c2195c898555c66ed0a64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "transfer(address,uint256)": {
        "details": "transfer token to a specified address.",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "transfer token to a specified address with additional data if the recipient is a contract.",
        "params": {
          "_data": "The extra data to be passed to the receiving contract.",
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 206,
        "contract": "contracts/Base/mocks/LinkToken.sol:LinkToken",
        "label": "balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 279,
        "contract": "contracts/Base/mocks/LinkToken.sol:LinkToken",
        "label": "allowed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 587,
        "contract": "contracts/Base/mocks/LinkToken.sol:LinkToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 590,
        "contract": "contracts/Base/mocks/LinkToken.sol:LinkToken",
        "label": "name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 593,
        "contract": "contracts/Base/mocks/LinkToken.sol:LinkToken",
        "label": "decimals",
        "offset": 0,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 596,
        "contract": "contracts/Base/mocks/LinkToken.sol:LinkToken",
        "label": "symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}