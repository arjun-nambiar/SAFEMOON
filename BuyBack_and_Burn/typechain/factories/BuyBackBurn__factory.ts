/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BuyBackBurn, BuyBackBurnInterface } from "../BuyBackBurn";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "ChangeRouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ChangeSFMAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChangeThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "buyBackAndBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeRouter",
        type: "address",
      },
    ],
    name: "changeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "changeSFMToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "changeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tradeRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sfmToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfmTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f77806100206000396000f3fe6080604052600436106100c05760003560e01c8063715018a611610074578063bb3f0cb91161004e578063bb3f0cb9146101e8578063c970e99f14610208578063f2fde38b1461021057600080fd5b8063715018a6146101955780638da5cb5b146101aa578063b4988fd0146101c857600080fd5b8063340ac20f116100a5578063340ac20f1461013157806342cde4e814610151578063694e80c31461017557600080fd5b80630ac7da67146100d457806331d7ba59146100f457600080fd5b366100cf576100cd610230565b005b600080fd5b3480156100e057600080fd5b506100cd6100ef366004610c48565b610286565b34801561010057600080fd5b50606554610114906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013d57600080fd5b506100cd61014c366004610c48565b61033a565b34801561015d57600080fd5b5061016760675481565b604051908152602001610128565b34801561018157600080fd5b506100cd610190366004610c6c565b6103e2565b3480156101a157600080fd5b506100cd610471565b3480156101b657600080fd5b506033546001600160a01b0316610114565b3480156101d457600080fd5b506100cd6101e3366004610c85565b6104d7565b3480156101f457600080fd5b50606654610114906001600160a01b031681565b6100cd610230565b34801561021c57600080fd5b506100cd61022b366004610c48565b610584565b6067544790811080159061024657506000606754115b156102835760006067548261025b9190610cc7565b905060008160675461026d9190610ce9565b905061027881610663565b610280610900565b50505b50565b6033546001600160a01b031633146102e55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b606680546001600160a01b0319166001600160a01b0383169081179091556040519081527fb101d4788583b1f14f2a4d03422ad132016b174de23db6d9e71bf5640c379513906020015b60405180910390a150565b6033546001600160a01b031633146103945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dc565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f9dd0d31c5942a38bf92491447ea9a3ca6ac9f7477f4fdb7492346525a78284bd9060200161032f565b6033546001600160a01b0316331461043c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dc565b60678190556040518181527f9947ac58e204d2da07b9748298663b3b77da7fb0638201d778987ded7c90fbaa9060200161032f565b6033546001600160a01b031633146104cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dc565b6104d560006109e9565b565b60006104e36001610a3b565b905080156104fb576000805461ff0019166101001790555b6067849055606580546001600160a01b038086166001600160a01b0319928316179092556066805492851692909116919091179055610538610b51565b801561057e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6033546001600160a01b031633146105de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dc565b6001600160a01b03811661065a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102dc565b610283816109e9565b6065546040805163c31c9c0760e01b815290516000926001600160a01b03169163c31c9c079160048083019260209291908290030181865afa1580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190610d16565b6040805160028082526060820183529293506000929091602083019080368337505060665482519293506001600160a01b031691839150600190811061071957610719610d49565b60200260200101906001600160a01b031690816001600160a01b031681525050816001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b9190610d16565b816000815181106107ae576107ae610d49565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b815260009184169063d06ca61f906107ed9087908690600401610d5f565b600060405180830381865afa15801561080a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108329190810190610db6565b905060006040518060a001604052808681526020018360018151811061085a5761085a610d49565b60200260200101518152602001848152602001306001600160a01b03168152602001428152509050606560009054906101000a90046001600160a01b03166001600160a01b031663a3514087868360006040518463ffffffff1660e01b81526004016108c7929190610e74565b6000604051808303818588803b1580156108e057600080fd5b505af11580156108f4573d6000803e3d6000fd5b50505050505050505050565b6066546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190610f06565b60665460405163a9059cbb60e01b815261dead6004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190610f1f565b5050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615610ac9578160ff166001148015610a5e5750303b155b610ac15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102dc565b506000919050565b60005460ff808416911610610b375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102dc565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610bbc5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016102dc565b6104d5600054610100900460ff16610c2a5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016102dc565b6104d5336109e9565b6001600160a01b038116811461028357600080fd5b600060208284031215610c5a57600080fd5b8135610c6581610c33565b9392505050565b600060208284031215610c7e57600080fd5b5035919050565b600080600060608486031215610c9a57600080fd5b833592506020840135610cac81610c33565b91506040840135610cbc81610c33565b809150509250925092565b600082610ce457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610d1157634e487b7160e01b600052601160045260246000fd5b500290565b600060208284031215610d2857600080fd5b8151610c6581610c33565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000604082018483526020604081850152818551808452606086019150828701935060005b81811015610da95784516001600160a01b031683529383019391830191600101610d84565b5090979650505050505050565b60006020808385031215610dc957600080fd5b825167ffffffffffffffff80821115610de157600080fd5b818501915085601f830112610df557600080fd5b815181811115610e0757610e07610d33565b8060051b604051601f19603f83011681018181108582111715610e2c57610e2c610d33565b604052918252848201925083810185019188831115610e4a57600080fd5b938501935b82851015610e6857845184529385019392850192610e4f565b98975050505050505050565b604080825283518282015260208085015160608401529084015160a06080840152805160e08401819052600092918201919083906101008601905b80831015610ed85784516001600160a01b03168252938301936001929092019190830190610eaf565b5060608801516001600160a01b031660a087015260809097015160c086015250909201929092525090919050565b600060208284031215610f1857600080fd5b5051919050565b600060208284031215610f3157600080fd5b81518015158114610c6557600080fdfea2646970667358221220511bf74f5908dd2d03d9d5dabe2fd0c472f7f4dd223eb94a5e99c39b80587e9464736f6c634300080d0033";

type BuyBackBurnConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyBackBurnConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyBackBurn__factory extends ContractFactory {
  constructor(...args: BuyBackBurnConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BuyBackBurn";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BuyBackBurn> {
    return super.deploy(overrides || {}) as Promise<BuyBackBurn>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BuyBackBurn {
    return super.attach(address) as BuyBackBurn;
  }
  connect(signer: Signer): BuyBackBurn__factory {
    return super.connect(signer) as BuyBackBurn__factory;
  }
  static readonly contractName: "BuyBackBurn";
  public readonly contractName: "BuyBackBurn";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyBackBurnInterface {
    return new utils.Interface(_abi) as BuyBackBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuyBackBurn {
    return new Contract(address, _abi, signerOrProvider) as BuyBackBurn;
  }
}
